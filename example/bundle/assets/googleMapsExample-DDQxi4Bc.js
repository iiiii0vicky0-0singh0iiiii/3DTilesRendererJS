import{j as v,k as R,l as z,m as H,g as N,B as V,d as j,n as $,o as k,p as K,q as E,W as q,S as Q,a as X,O as Z,i as f}from"./three.module-CvwULque.js";import{D as J}from"./DRACOLoader-_-dX8e_o.js";import{g as Y}from"./lil-gui.module.min-Bc0DeA9g.js";import{S as ee}from"./stats.module--VATS4Kh.js";import{T as te}from"./TilesRenderer-B__2iXax.js";import{G as ae}from"./GoogleCloudAuthPlugin-ByYp_pcn.js";import{T as ne}from"./TileCompressionPlugin-D4njFejO.js";import{U as re}from"./UpdateOnChangePlugin-CElRVQKd.js";import{U as ie}from"./UnloadTilesPlugin-CHCm9Icc.js";import{T as se}from"./TilesFadePlugin-Qr9WKzim.js";import{F as oe,G as ce}from"./GLTFExtensionsPlugin-D2kmT0dy.js";import{C as de}from"./CameraTransitionManager-DRkZl6NU.js";import{G as le}from"./GlobeControls-C2UdnvQA.js";import{C as W,t as he}from"./Ellipsoid-LZ-ZKZQp.js";import{W as I}from"./I3DMLoader-MN4j8OdF.js";import"./B3DMLoader-CD9oTgMD.js";import"./readMagicBytes-Da5ueiou.js";import"./LoaderBase-CVSPpjX2.js";import"./GLTFLoader-nx88wwE7.js";import"./PNTSLoader-Dw0W6_Z8.js";import"./CMPTLoader-lyV0-C59.js";import"./GLTFExtensionLoader-XUNwtda-.js";import"./EllipsoidRegion-DxePPRoU.js";import"./EnvironmentControls-1r8kezR_.js";const ue=new v,D=new R,G=new R;class me extends z{constructor(...e){super(...e),this.resetDistance=1e4,this._matricesTextureHandle=null,this._lastCameraPos=new v,this._forceUpdate=!0}setMatrixAt(...e){super.setMatrixAt(...e),this._forceUpdate=!0}onBeforeRender(e,t,a,s,d,n){super.onBeforeRender(e,t,a,s,d,n),D.setFromMatrixPosition(a.matrixWorld),G.setFromMatrixPosition(this._lastCameraPos);const c=this._matricesTexture;let r=this._modelViewMatricesTexture;if((!r||r.image.width!==c.image.width||r.image.height!==c.image.height)&&(r&&r.dispose(),r=c.clone(),r.source=new H({...r.image,data:r.image.data.slice()}),this._modelViewMatricesTexture=r),this._forceUpdate||D.distanceTo(G)>this.resetDistance){const l=c.image.data,m=r.image.data;for(let h=0;h<this.maxInstanceCount;h++)ue.fromArray(l,h*16).premultiply(this.matrixWorld).premultiply(a.matrixWorldInverse).toArray(m,h*16);r.needsUpdate=!0,this._lastCameraPos.copy(a.matrixWorld),this._forceUpdate=!1}this._matricesTextureHandle=this._matricesTexture,this._matricesTexture=this._modelViewMatricesTexture,this.matrixWorld.copy(this._lastCameraPos)}onAfterRender(){this.updateMatrixWorld(),this._matricesTexture=this._matricesTextureHandle,this._matricesTextureHandle=null}onAfterShadow(e,t,a,s,d,n){this.onAfterRender(e,null,s,d,n)}dispose(){super.dispose(),this._modelViewMatricesTexture&&this._modelViewMatricesTexture.dispose()}}const C=new N,_=[];class pe extends me{constructor(...e){super(...e),this.expandPercent=.25,this.maxInstanceExpansionSize=1/0,this._freeGeometryIds=[]}findFreeId(e,t,a){const s=!!this.geometry.index,d=Math.max(s?e.index.count:-1,a),n=Math.max(e.attributes.position.count,t);let c=-1,r=1/0;const l=this._freeGeometryIds;if(l.forEach((m,h)=>{const y=this.getGeometryRangeAt(m),{reservedIndexCount:p,reservedVertexCount:g}=y;if(p>=d&&g>=n){const w=d-p+(n-g);w<r&&(c=h,r=w)}}),c!==-1){const m=l[c];return l.splice(c,1),m}else return-1}addGeometry(e,t,a){const s=!!this.geometry.index;a=Math.max(s?e.index.count:-1,a),t=Math.max(e.attributes.position.count,t);const{expandPercent:d,_freeGeometryIds:n}=this;let c=this.findFreeId(e,t,a);if(c!==-1)this.setGeometryAt(c,e);else{const r=()=>{const h=this.unusedVertexCount<t,y=this.unusedIndexCount<a;return h||y},l=e.index,m=e.attributes.position;if(t=Math.max(t,m.count),a=Math.max(a,l?l.count:0),r()&&(n.forEach(h=>this.deleteGeometry(h)),n.length=0,this.optimize(),r())){const h=this.geometry.index,y=this.geometry.attributes.position;let p,g;if(h){const w=Math.ceil(d*h.count);p=Math.max(w,a,l.count)+h.count}else p=Math.max(this.unusedIndexCount,a);if(y){const w=Math.ceil(d*y.count);g=Math.max(w,t,m.count)+y.count}else g=Math.max(this.unusedVertexCount,t);this.setGeometrySize(g,p)}c=super.addGeometry(e,t,a)}return c}addInstance(e){if(this.maxInstanceCount===this.instanceCount){const t=Math.ceil(this.maxInstanceCount*(1+this.expandPercent));this.setInstanceCount(Math.min(t,this.maxInstanceExpansionSize))}return super.addInstance(e)}deleteInstance(e){const t=this.getGeometryIdAt(e);return t!==-1&&this._freeGeometryIds.push(t),super.deleteInstance(e)}raycastInstance(e,t,a){const s=this.geometry,d=this.getGeometryIdAt(e);C.material=this.material,C.geometry.index=s.index,C.geometry.attributes=s.attributes;const n=this.getGeometryRangeAt(d);C.geometry.setDrawRange(n.start,n.count),C.geometry.boundingBox===null&&(C.geometry.boundingBox=new V),C.geometry.boundingSphere===null&&(C.geometry.boundingSphere=new j),this.getMatrixAt(e,C.matrixWorld).premultiply(this.matrixWorld),this.getBoundingBoxAt(d,C.geometry.boundingBox),this.getBoundingSphereAt(d,C.geometry.boundingSphere),C.raycast(t,_);for(let c=0,r=_.length;c<r;c++){const l=_[c];l.object=this,l.batchId=e,a.push(l)}_.length=0}}function ge(o){return o.r===1&&o.g===1&&o.b===1}function xe(o){o.needsUpdate=!0,o.onBeforeCompile=e=>{e.vertexShader=e.vertexShader.replace("#include <common>",`
				#include <common>
				varying float texture_index;
				`).replace("#include <uv_vertex>",`
				#include <uv_vertex>
				texture_index = getIndirectIndex( gl_DrawID );
				`),e.fragmentShader=e.fragmentShader.replace("#include <map_pars_fragment>",`
				#ifdef USE_MAP
				precision highp sampler2DArray;
				uniform sampler2DArray map;
				varying float texture_index;
				#endif
				`).replace("#include <map_fragment>",`
				#ifdef USE_MAP
					diffuseColor *= texture( map, vec3( vMapUv, texture_index ) );
				#endif
				`)}}const S=new oe(new $),L=new k(new Uint8Array([255,255,255,255]),1,1);L.needsUpdate=!0;class fe{constructor(e={}){if(parseInt(K)<170)throw new Error("BatchedTilesPlugin: Three.js revision 170 or higher required.");e={instanceCount:500,vertexCount:750,indexCount:2e3,expandPercent:.25,maxInstanceCount:1/0,discardOriginalContent:!0,material:null,renderer:null,...e},this.name="BATCHED_TILES_PLUGIN",this.priority=-1;const t=e.renderer.getContext();this.instanceCount=e.instanceCount,this.vertexCount=e.vertexCount,this.indexCount=e.indexCount,this.material=e.material?e.material.clone():null,this.expandPercent=e.expandPercent,this.maxInstanceCount=Math.min(e.maxInstanceCount,t.getParameter(t.MAX_3D_TEXTURE_SIZE)),this.renderer=e.renderer,this.discardOriginalContent=e.discardOriginalContent,this.batchedMesh=null,this.arrayTarget=null,this.tiles=null,this._onLoadModel=null,this._onDisposeModel=null,this._onVisibilityChange=null,this._tileToInstanceId=new Map}init(e){this._onDisposeModel=({scene:t,tile:a})=>{this.removeSceneFromBatchedMesh(t,a)},e.addEventListener("dispose-model",this._onDisposeModel),this.tiles=e}initBatchedMesh(e){if(this.batchedMesh!==null)return;const{instanceCount:t,vertexCount:a,indexCount:s,tiles:d,renderer:n}=this,c=this.material?this.material:new e.material.constructor,r=new pe(t,t*a,t*s,c);r.name="BatchTilesPlugin",r.frustumCulled=!1,d.group.add(r),r.updateMatrixWorld();const l=e.material.map,m={colorSpace:l.colorSpace,wrapS:l.wrapS,wrapT:l.wrapT,wrapR:l.wrapS,magFilter:l.magFilter},h=new E(l.image.width,l.image.height,t);Object.assign(h.texture,m),n.initRenderTarget(h),c.map=h.texture,xe(c),this.arrayTarget=h,this.batchedMesh=r}setTileVisible(e,t){const a=e.cached.scene;if(t&&this.addSceneToBatchedMesh(a,e),this._tileToInstanceId.has(e)){this._tileToInstanceId.get(e).forEach(n=>{this.batchedMesh.setVisibleAt(n,t)});const d=this.tiles;return t?d.visibleTiles.add(e):d.visibleTiles.delete(e),d.dispatchEvent({type:"tile-visibility-change",scene:a,tile:e,visible:t}),!0}return!1}unloadTileFromGPU(e,t){return!this.discardOriginalContent&&this._tileToInstanceId.has(t)?(this.removeSceneFromBatchedMesh(e,t),!0):!1}assignTextureToLayer(e,t){this.expandArrayTargetIfNeeded();const{renderer:a}=this,s=a.getRenderTarget();a.setRenderTarget(this.arrayTarget,t),S.material.map=e,S.render(a),a.setRenderTarget(s),S.material.map=null,e.dispose()}expandArrayTargetIfNeeded(){const{batchedMesh:e,arrayTarget:t,renderer:a}=this,s=Math.min(e.maxInstanceCount,this.maxInstanceCount);if(s>t.depth){const d={colorSpace:t.texture.colorSpace,wrapS:t.texture.wrapS,wrapT:t.texture.wrapT,generateMipmaps:t.texture.generateMipmaps,minFilter:t.texture.minFilter,magFilter:t.texture.magFilter},n=new E(t.width,t.height,s);Object.assign(n.texture,d),a.initRenderTarget(n),a.copyTextureToTexture(t.texture,n.texture),t.dispose(),e.material.map=n.texture,this.arrayTarget=n}}removeSceneFromBatchedMesh(e,t){if(this._tileToInstanceId.has(t)){const a=this._tileToInstanceId.get(t);this._tileToInstanceId.delete(t),a.forEach(s=>{this.batchedMesh.deleteInstance(s)})}}addSceneToBatchedMesh(e,t){if(this._tileToInstanceId.has(t))return;const a=[];e.traverse(n=>{n.isMesh&&a.push(n)});let s=!0;a.forEach(n=>{if(this.batchedMesh&&s){const c=n.geometry.attributes,r=this.batchedMesh.geometry.attributes;for(const l in r)if(!(l in c)){s=!1;return}}});const d=!this.batchedMesh||this.batchedMesh.instanceCount+a.length<=this.maxInstanceCount;if(s&&d){this.discardOriginalContent&&(t.cached.scene=null,t.cached.materials=[],t.cached.geometries=[],t.cached.textures=[]),e.updateMatrixWorld();const n=[];a.forEach(c=>{this.initBatchedMesh(c);const{geometry:r,material:l}=c,{batchedMesh:m,expandPercent:h}=this;m.expandPercent=h;const y=m.addGeometry(r,this.vertexCount,this.indexCount),p=m.addInstance(y);n.push(p),m.setMatrixAt(p,c.matrixWorld),m.setVisibleAt(p,!1),ge(l.color)||(l.color.setHSL(Math.random(),.5,.5),m.setColorAt(p,l.color));const g=l.map;g?this.assignTextureToLayer(g,p):this.assignTextureToLayer(L,p)}),this._tileToInstanceId.set(t,n)}}raycastTile(e,t,a,s){return this._tileToInstanceId.has(e)?(this._tileToInstanceId.get(e).forEach(n=>{this.batchedMesh.raycastInstance(n,a,s)}),!0):!1}dispose(){const{arrayTarget:e,tiles:t,batchedMesh:a}=this;e&&e.dispose(),a&&(a.material.dispose(),a.geometry.dispose(),a.dispose(),a.removeFromParent()),t.removeEventListener("dispose-model",this._onDisposeModel)}getTileBatchIds(e){return this._tileToInstanceId.get(e)}}let M,b,T,i,u,A,P;const Te=localStorage.getItem("googleApiKey")??"put-your-api-key-here",x={orthographic:!1,enableCacheDisplay:!1,enableRendererStats:!1,apiKey:Te,useBatchedMesh:!!new URLSearchParams(window.location.hash.replace(/^#/,"")).get("batched"),errorTarget:40,reload:U};Ce();O();function U(){i&&(b.remove(i.group),i.dispose(),i=null),localStorage.setItem("googleApiKey",x.apiKey),i=new te,i.registerPlugin(new ae({apiToken:x.apiKey,autoRefreshToken:!0})),i.registerPlugin(new ne),i.registerPlugin(new re),i.registerPlugin(new ie),i.registerPlugin(new se),i.registerPlugin(new ce({dracoLoader:new J().setDecoderPath("https://unpkg.com/three@0.153.0/examples/jsm/libs/draco/gltf/")})),x.useBatchedMesh&&i.registerPlugin(new fe({renderer:T,discardOriginalContent:!1,instanceCount:250})),i.group.rotation.x=-Math.PI/2,b.add(i.group),i.setResolutionFromRenderer(u.camera,T),i.setCamera(u.camera),M.setTilesRenderer(i)}function Ce(){T=new q({antialias:!0}),T.setClearColor(1383455),document.body.appendChild(T.domElement),b=new Q,u=new de(new X(60,window.innerWidth/window.innerHeight,1,16e7),new Z(-1,1,1,-1,1,16e7)),u.perspectiveCamera.position.set(48e5,257e4,1472e4),u.perspectiveCamera.lookAt(0,0,0),u.autoSync=!1,u.addEventListener("camera-change",({camera:a,prevCamera:s})=>{i.deleteCamera(s),i.setCamera(a),M.setCamera(a)}),u.orthographicPositionalZoom=!1,M=new le(b,u.camera,T.domElement,null),M.enableDamping=!0,U(),B(),window.addEventListener("resize",B,!1),window.addEventListener("hashchange",F);const o=new Y;o.width=300,o.add(x,"orthographic").onChange(a=>{M.getPivotPoint(u.fixedPoint),u.syncCameras(),M.adjustCamera(u.perspectiveCamera),M.adjustCamera(u.orthographicCamera),u.toggle()});const e=o.addFolder("Google Photorealistic Tiles");e.add(x,"apiKey"),e.add(x,"useBatchedMesh").listen(),e.add(x,"reload");const t=o.addFolder("Example Options");t.add(x,"enableCacheDisplay"),t.add(x,"enableRendererStats"),t.add(x,"errorTarget",5,100,1).onChange(()=>{i.getPluginByName("UPDATE_ON_CHANGE_PLUGIN").needsUpdate=!0}),A=document.createElement("div"),document.getElementById("info").appendChild(A),P=new ee,P.showPanel(0),document.body.appendChild(P.dom),F(),setInterval(ye,100)}function B(){const{perspectiveCamera:o,orthographicCamera:e}=u,t=window.innerWidth/window.innerHeight;o.aspect=t,o.updateProjectionMatrix(),e.left=-e.top*t,e.right=-e.left,e.updateProjectionMatrix(),T.setSize(window.innerWidth,window.innerHeight),T.setPixelRatio(window.devicePixelRatio)}function ye(){if(!i)return;const o=u.camera,e={},t={},a=i.group.matrixWorld.clone().invert(),s=o.position.clone().applyMatrix4(a),d=o.matrixWorld.clone().premultiply(a);I.getPositionToCartographic(s,e),I.getAzElRollFromRotationMatrix(e.lat,e.lon,d,t,W),t.azimuth*=f.RAD2DEG,t.elevation*=f.RAD2DEG,t.roll*=f.RAD2DEG,e.lat*=f.RAD2DEG,e.lon*=f.RAD2DEG;const n=new URLSearchParams;n.set("lat",e.lat.toFixed(4)),n.set("lon",e.lon.toFixed(4)),n.set("height",e.height.toFixed(2)),n.set("az",t.azimuth.toFixed(2)),n.set("el",t.elevation.toFixed(2)),n.set("roll",t.roll.toFixed(2)),x.useBatchedMesh&&n.set("batched",1),window.history.replaceState(void 0,void 0,`#${n}`)}function F(){const o=window.location.hash.replace(/^#/,""),e=new URLSearchParams(o);if(e.has("batched")&&(x.useBatchedMesh=!!e.get("batched")),!e.has("lat")&&!e.has("lon"))return;i.group.updateMatrixWorld();const t=u.camera,a=parseFloat(e.get("lat")),s=parseFloat(e.get("lon")),d=parseFloat(e.get("height"))||1e3;if(e.has("az")&&e.has("el")){const n=parseFloat(e.get("az")),c=parseFloat(e.get("el")),r=parseFloat(e.get("roll"))||0;I.getRotationMatrixFromAzElRoll(a*f.DEG2RAD,s*f.DEG2RAD,n*f.DEG2RAD,c*f.DEG2RAD,r*f.DEG2RAD,t.matrixWorld,W),t.matrixWorld.premultiply(i.group.matrixWorld),t.matrixWorld.decompose(t.position,t.quaternion,t.scale),I.getCartographicToPosition(a*f.DEG2RAD,s*f.DEG2RAD,d,t.position),t.position.applyMatrix4(i.group.matrixWorld)}else I.getCartographicToPosition(a*f.DEG2RAD,s*f.DEG2RAD,d,t.position),t.position.applyMatrix4(i.group.matrixWorld),t.lookAt(0,0,0)}function O(){if(requestAnimationFrame(O),!i)return;M.enabled=!u.animating,M.update(),u.update();const o=u.camera;i.setResolutionFromRenderer(o,T),i.setCamera(o),o.updateMatrixWorld(),i.errorTarget=x.errorTarget,i.update(),T.render(b,o),P.update(),Me()}function Me(){var d,n,c;let o="";if(x.enableCacheDisplay){const r=i.lruCache,l=r.cachedBytes/r.maxBytesSize;o+=`Downloading: ${i.stats.downloading} Parsing: ${i.stats.parsing} Visible: ${i.visibleTiles.size}<br/>`,o+=`Cache: ${(100*l).toFixed(2)}% ~${(r.cachedBytes/1e3/1e3).toFixed(2)}mb<br/>`}if(x.enableRendererStats){const r=T.info.memory,l=T.info.render,m=T.info.programs.length;o+=`Geometries: ${r.geometries} Textures: ${r.textures} Programs: ${m} Draw Calls: ${l.calls}`;const h=i.getPluginByName("BATCHED_TILES_PLUGIN"),y=i.getPluginByName("FADE_TILES_PLUGIN");if(h){let p=0;(d=h.batchedMesh)==null||d._instanceInfo.forEach(g=>{g.visible&&g.active&&p++}),(n=y.batchedMesh)==null||n._instanceInfo.forEach(g=>{g.visible&&g.active&&p++}),o+=", Batched: "+p}}A.innerHTML!==o&&(A.innerHTML=o);const e=i.group.matrixWorld.clone().invert(),t=u.camera.position.clone().applyMatrix4(e),a={};I.getPositionToCartographic(t,a);const s=((c=i.getAttributions()[0])==null?void 0:c.value)||"";document.getElementById("credits").innerText=he(a.lat,a.lon)+`
`+s}
